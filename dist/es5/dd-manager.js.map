{"version":3,"file":"dd-manager.js","sourceRoot":"","sources":["../../src/dd-manager.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAMH;;GAEG;AACH;IAAA;IAgBA,CAAC;IAAD,gBAAC;AAAD,CAAC,AAhBD,IAgBC;AAhBY,8BAAS","sourcesContent":["/**\r\n * dd-manager.ts 7.3.0\r\n * Copyright (c) 2021 Alain Dumesny - see GridStack root license\r\n */\r\n\r\nimport { DDDraggable } from './dd-draggable';\r\nimport { DDDroppable } from './dd-droppable';\r\nimport { DDResizable } from './dd-resizable';\r\n\r\n/**\r\n * globals that are shared across Drag & Drop instances\r\n */\r\nexport class DDManager {\r\n  /** if set (true | in msec), dragging placement (collision) will only happen after a pause by the user*/\r\n  public static pauseDrag: boolean | number;\r\n\r\n  /** true if a mouse down event was handled */\r\n  public static mouseHandled: boolean;\r\n\r\n  /** item being dragged */\r\n  public static dragElement: DDDraggable;\r\n\r\n  /** item we are currently over as drop target */\r\n  public static dropElement: DDDroppable;\r\n\r\n  /** current item we're over for resizing purpose (ignore nested grid resize handles) */\r\n  public static overResizeElement: DDResizable;\r\n\r\n}\r\n"]}